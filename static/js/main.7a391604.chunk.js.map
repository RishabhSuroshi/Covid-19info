{"version":3,"sources":["component/covid_table.js","App.js","reportWebVitals.js","index.js"],"names":["COVID","useState","data","setData","getcovid_Data","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","scope","map","curElem","ind","state","confirmed","recovered","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA6EeA,MA1Ef,WAEI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAa,uCAAG,8BAAAC,EAAA,sEACCC,MAAO,2CADR,cACXC,EADW,gBAEQA,EAAIC,OAFZ,OAEXC,EAFW,OAGjBC,QAAQC,IAAIF,EAAWG,WACvBT,EAAQM,EAAWG,WAJF,2CAAH,qDAUnB,OAHAC,qBAAU,WACPT,MACA,IAEC,qCAIM,mDACV,8DAKA,wBAAOU,UAAU,QAAjB,UACF,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCAGKb,EAAKc,KAAI,SAACC,EAASC,GACjB,OACH,+BACA,oBAAIH,MAAM,MAAV,SAAiBE,EAAQE,QACzB,6BAAKF,EAAQG,YACb,6BAAKH,EAAQI,YACb,6BAAKJ,EAAQK,SACb,6BAAKL,EAAQM,SACb,6BAAKN,EAAQO,kBACb,6BAAKP,EAAQO,oBAPHN,eChCDO,G,MARH,WACV,OACE,mCACE,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7a391604.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\n\r\nfunction COVID() {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getcovid_Data = async () => {\r\n         const res = await fetch ('https://data.covid19india.org/data.json');\r\n         const actualData = await res.json();\r\n         console.log(actualData.statewise);\r\n         setData(actualData.statewise);\r\n    }\r\n\r\n    useEffect(() => {\r\n       getcovid_Data();\r\n    }, [])\r\n    return (\r\n        <>\r\n  \r\n\r\n\r\n              <h1>ðŸ”´ Live</h1>  \r\n    <h2>COVID-19 CORONAVIRUS TRACKER</h2>\r\n    \r\n  \r\n\r\n\r\n    <table className=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">State</th>\r\n      <th scope=\"col\">Confirmed</th>\r\n      <th scope=\"col\">Recovered</th>\r\n      <th scope=\"col\">Deaths</th>\r\n      <th scope=\"col\">active</th>\r\n      <th scope=\"col\">updated</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n    {\r\n       data.map((curElem, ind) =>{\r\n         return(\r\n      <tr key ={ind}>\r\n      <th scope=\"col\">{curElem.state}</th>\r\n      <td>{curElem.confirmed}</td>\r\n      <td>{curElem.recovered}</td>\r\n      <td>{curElem.deaths}</td>\r\n      <td>{curElem.active}</td>\r\n      <td>{curElem.lastupdatedtime}</td>\r\n      <td>{curElem.lastupdatedtime}</td>\r\n\r\n    </tr>\r\n         )\r\n       })\r\n\r\n    }\r\n  \r\n      \r\n  </tbody>\r\n</table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default COVID\r\n","import React from 'react'\nimport Covid from './component/covid_table'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst App = () => {\n  return (\n    <>\n      <Covid></Covid>\n        </>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}